///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DesktopApp_Automation.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DownloadApp recording.
    /// </summary>
    [TestModule("74e20cc8-6176-4a3a-9388-fece32c32f9f", ModuleType.Recording, 1)]
    public partial class DownloadApp : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DesktopApp_Automation.DesktopApp_AutomationRepository repository.
        /// </summary>
        public static global::DesktopApp_Automation.DesktopApp_AutomationRepository repo = global::DesktopApp_Automation.DesktopApp_AutomationRepository.Instance;

        static DownloadApp instance = new DownloadApp();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DownloadApp()
        {
            varURL = "https://notepad-plus-plus.org/downloads/v7.8.6/";
            varFileSetupName = " npp.7.8.6.Installer.x64";
            varBrowser = "Chrome";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DownloadApp Instance
        {
            get { return instance; }
        }

#region Variables

        string _varURL;

        /// <summary>
        /// Gets or sets the value of variable varURL.
        /// </summary>
        [TestVariable("180b2a54-bc4c-4967-8bb8-acaea450e9d6")]
        public string varURL
        {
            get { return _varURL; }
            set { _varURL = value; }
        }

        string _varFileSetupName;

        /// <summary>
        /// Gets or sets the value of variable varFileSetupName.
        /// </summary>
        [TestVariable("dba188fa-4309-405c-965f-6802f0e2b0cd")]
        public string varFileSetupName
        {
            get { return _varFileSetupName; }
            set { _varFileSetupName = value; }
        }

        string _varBrowser;

        /// <summary>
        /// Gets or sets the value of variable varBrowser.
        /// </summary>
        [TestVariable("f438010a-4fee-4cfa-8358-d4097bef88c9")]
        public string varBrowser
        {
            get { return _varBrowser; }
            set { _varBrowser = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site URL in variable $varURL with browser specified by variable $varBrowser in maximized mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser(varURL, varBrowser, "", false, true, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DownloadsNotepadPlusPlus.Installer' at 22;8.", repo.DownloadsNotepadPlusPlus.InstallerInfo, new RecordItemIndex(1));
            repo.DownloadsNotepadPlusPlus.Installer.Click("22;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641Exe'", repo.NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641ExeInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641ExeInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$varFileSetupName) on item 'NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641Exe'.", repo.NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641ExeInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.NotepadPlusPlus786ReleaseNotepadP.ButtonNpp786InstallerX641ExeInfo, "Text", varFileSetupName);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
