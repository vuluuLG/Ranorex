///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using DesktopApp_Modules.Common;

namespace DesktopApp_Modules.ApplicationModules.ControlPanel
{
    public partial class UninstallIfExistApp
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public void UninstallIfExist()
        {
			if(repo.ProgramsAndFeatures.ApplicationListItemInfo.Exists(Common.Constants.shortTime)){
        		string message = string.Format("okkkkkkkkkkkkkkkkkk");
                Report.Log(ReportLevel.Info, message);
                
				Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProgramsAndFeatures.ApplicationName' at Center.", repo.ProgramsAndFeatures.ApplicationListItemInfo, new RecordItemIndex(0));
	            repo.ProgramsAndFeatures.ApplicationListItem.Click();
	            
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ProgramsAndFeatures.Uninstall' at Center.", repo.ProgramsAndFeatures.UninstallInfo, new RecordItemIndex(1));
	            repo.ProgramsAndFeatures.Uninstall.Click();
	            
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UninstallApp.ButtonUninstall' at Center.", repo.UninstallApp.ButtonUninstallInfo, new RecordItemIndex(2));
	            repo.UninstallApp.ButtonUninstall.Click();
	            	
	            if(repo.UninstallApp.ButtonNoInfo.Exists(Common.Constants.shortTime)){
		            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UninstallApp.ButtonNo' at Center.", repo.UninstallApp.ButtonNoInfo, new RecordItemIndex(3));
		           	repo.UninstallApp.ButtonNo.Click();
        		}
	            
	            if(repo.UninstallApp.ProgressBarInfo.Exists(Common.Constants.shortTime)){
	            	repo.UninstallApp.ProgressBarInfo.WaitForAttributeEqual(Common.Constants.shortTime, "accessiblevalue", "100%");
        		}
	            
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UninstallApp.ButtonClose' at Center.", repo.UninstallApp.ButtonCloseInfo, new RecordItemIndex(4));
	            repo.UninstallApp.ButtonCloseInfo.FindAdapter<Button>().Click();  
            }
            else
            {
                string message = string.Format("The program not exists in the Control Panel, uninstall file will be skipped");
                Report.Log(ReportLevel.Warn, message);
            }
        }
        
    }
}
