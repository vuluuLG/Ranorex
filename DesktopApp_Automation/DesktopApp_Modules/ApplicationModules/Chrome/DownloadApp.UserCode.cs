///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DesktopApp_Modules.ApplicationModules.Chrome
{
    public partial class DownloadApp
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Report_Log()
        {
            Report.Log(ReportLevel.Info, "User", repoVersionApp);
        }

        public void Wait_for_ButtonNpp786InstallerX646Exe(RepoItemInfo buttonInfo)
        {
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'buttonInfo'", buttonInfo, new ActionTimeout(120000));
            buttonInfo.WaitForExists(5000);
        }

        public void Mouse_Click_Installer(RepoItemInfo atagInfo)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'atagInfo' at Center.", atagInfo);
            atagInfo.FindAdapter<ATag>().Click();
        }

        public void Mouse_Click_ATagNotepadPlusPlus786R(RepoItemInfo atagInfo)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'atagInfo' at 24;16.", atagInfo);
            atagInfo.FindAdapter<ATag>().Click("24;16");
        }

        public void Wait_for_ButtonNpp786InstallerX646Exe1(RepoItemInfo buttonInfo)
        {
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'buttonInfo'", buttonInfo, new ActionTimeout(120000));
            buttonInfo.WaitForExists(120000);
        }

    }
}
