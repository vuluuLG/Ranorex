///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using DesktopApp_Modules.Common;

namespace DesktopApp_Modules.ApplicationModules.Notepad
{
    public partial class InstallApp
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Mouse_Click_ButtonOK(RepoItemInfo buttonInfo)
        {
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
            	buttonInfo.FindAdapter<Button>().Click();
        	}
        }

        public void Mouse_Click_ButtonNext(RepoItemInfo buttonInfo)
        {
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();
        	}
        }

        public void Mouse_Click_IAgree(RepoItemInfo buttonInfo)
        {
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();
        	}
        }

        public void Mouse_Click_ButtonNext1(RepoItemInfo buttonInfo)
        {
        	while(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();
	            buttonInfo.Exists(Common.Constants.shortTime);
        	}
        }

        public void Mouse_Click_ButtonInstall(RepoItemInfo buttonInfo)
        {
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();  
        	}
        	
        }

        public void Mouse_Click_ButtonFinish(RepoItemInfo buttonInfo)
        {
        	buttonInfo.WaitForExists(Common.Constants.longTime);
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();
        	}
        }

        public void Mouse_Click_Close(RepoItemInfo buttonInfo)
        {
        	if(buttonInfo.Exists(Common.Constants.shortTime)){
	            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'buttonInfo' at Center.", buttonInfo);
	            buttonInfo.FindAdapter<Button>().Click();
        	}
        }

    }
}
