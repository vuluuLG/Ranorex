///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DesktopApp_Automation.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateInstalled recording.
    /// </summary>
    [TestModule("8eaed4a9-ef77-43b6-b80f-1482c01c1b0c", ModuleType.Recording, 1)]
    public partial class ValidateInstalled : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DesktopApp_Automation.DesktopApp_TestRepository repository.
        /// </summary>
        public static global::DesktopApp_Automation.DesktopApp_TestRepository repo = global::DesktopApp_Automation.DesktopApp_TestRepository.Instance;

        static ValidateInstalled instance = new ValidateInstalled();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateInstalled()
        {
            varVersion = "7.8.6";
            varSoftwareName = "Notepad++ (64-bit x64)";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateInstalled Instance
        {
            get { return instance; }
        }

#region Variables

        string _varVersion;

        /// <summary>
        /// Gets or sets the value of variable varVersion.
        /// </summary>
        [TestVariable("30e91f8e-376a-4cbd-ad83-9f43f754d924")]
        public string varVersion
        {
            get { return _varVersion; }
            set { _varVersion = value; }
        }

        string _varSoftwareName;

        /// <summary>
        /// Gets or sets the value of variable varSoftwareName.
        /// </summary>
        [TestVariable("c4a26217-63f4-4a6f-af47-5ab73ade2ee4")]
        public string varSoftwareName
        {
            get { return _varSoftwareName; }
            set { _varSoftwareName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Explorer.Text4101' at 96;14.", repo.Explorer.Text4101Info, new RecordItemIndex(0));
            repo.Explorer.Text4101.Click("96;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence ' Control Panel'.", new RecordItemIndex(1));
            Keyboard.Press(" Control Panel");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(2));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ControlPanel.Tasklink' at 50;7.", repo.ControlPanel.TasklinkInfo, new RecordItemIndex(3));
            repo.ControlPanel.Tasklink.Click("50;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (Text>$varSoftwareName) on item 'ProgramsAndFeatures.NotepadPlusPlus64BitX641'.", repo.ProgramsAndFeatures.NotepadPlusPlus64BitX641Info, new RecordItemIndex(4));
            Validate.AttributeContains(repo.ProgramsAndFeatures.NotepadPlusPlus64BitX641Info, "Text", varSoftwareName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varVersion) on item 'ProgramsAndFeatures.Cell7861'.", repo.ProgramsAndFeatures.Cell7861Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ProgramsAndFeatures.Cell7861Info, "Text", varVersion);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
