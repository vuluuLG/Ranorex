///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Web_DashBoard.Record_Actions
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SubmitPageInfo recording.
    /// </summary>
    [TestModule("bace383e-ce24-4d35-a374-222d4571d37a", ModuleType.Recording, 1)]
    public partial class SubmitPageInfo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Web_DashBoard.Web_DashBoardRepository repository.
        /// </summary>
        public static global::Web_DashBoard.Web_DashBoardRepository repo = global::Web_DashBoard.Web_DashBoardRepository.Instance;

        static SubmitPageInfo instance = new SubmitPageInfo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SubmitPageInfo()
        {
            parentPage = "(null)";
            numberOfColumn = "2";
            displayAfter = "";
            isPublic = "";
            pageName = "Test";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SubmitPageInfo Instance
        {
            get { return instance; }
        }

#region Variables

        string _parentPage;

        /// <summary>
        /// Gets or sets the value of variable parentPage.
        /// </summary>
        [TestVariable("f1199138-5502-4a5b-b886-e99ef6fcfe87")]
        public string parentPage
        {
            get { return _parentPage; }
            set { _parentPage = value; }
        }

        string _numberOfColumn;

        /// <summary>
        /// Gets or sets the value of variable numberOfColumn.
        /// </summary>
        [TestVariable("0908d7f6-d292-4ef9-ac53-6c037c9ae8e8")]
        public string numberOfColumn
        {
            get { return _numberOfColumn; }
            set { _numberOfColumn = value; }
        }

        string _displayAfter;

        /// <summary>
        /// Gets or sets the value of variable displayAfter.
        /// </summary>
        [TestVariable("d1c6a5f6-5743-439e-8914-967bd10b938c")]
        public string displayAfter
        {
            get { return _displayAfter; }
            set { _displayAfter = value; }
        }

        string _isPublic;

        /// <summary>
        /// Gets or sets the value of variable isPublic.
        /// </summary>
        [TestVariable("8426cd18-e80f-4a51-8154-dd394031322b")]
        public string isPublic
        {
            get { return _isPublic; }
            set { _isPublic = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable pageName.
        /// </summary>
        [TestVariable("604eb7d5-ab98-4815-8acc-06d716c2f5c3")]
        public string pageName
        {
            get { return repo.pageName; }
            set { repo.pageName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            EnterPageName(repo.Dashboard.AddPage.txtNameInfo, pageName);
            Delay.Milliseconds(0);
            
            SelectParentPage(repo.Dashboard.AddPage.cbbParentInfo, parentPage);
            Delay.Milliseconds(0);
            
            SelectNumberOfColumn(repo.Dashboard.AddPage.cbbNumberOfColumnInfo, numberOfColumn);
            Delay.Milliseconds(0);
            
            SelectDisplayAfterPage(repo.Dashboard.AddPage.cbbDisplayAfterInfo, displayAfter);
            Delay.Milliseconds(0);
            
            SetIsPublic(repo.Dashboard.AddPage.cbxPublicInfo, isPublic);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dashboard.AddPage.btnOK' at Center.", repo.Dashboard.AddPage.btnOKInfo, new RecordItemIndex(5));
            repo.Dashboard.AddPage.btnOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to not exist. Associated repository item: 'Dashboard.AddPage.btnOK'", repo.Dashboard.AddPage.btnOKInfo, new ActionTimeout(5000), new RecordItemIndex(6));
            repo.Dashboard.AddPage.btnOKInfo.WaitForNotExists(5000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
