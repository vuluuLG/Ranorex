///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Web_DashBoard.Record_Actions.Panel
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterIndicatorSetting recording.
    /// </summary>
    [TestModule("08c95115-3695-442b-ae6d-cbf4150d3788", ModuleType.Recording, 1)]
    public partial class EnterIndicatorSetting : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Web_DashBoard.Web_DashBoardRepository repository.
        /// </summary>
        public static global::Web_DashBoard.Web_DashBoardRepository repo = global::Web_DashBoard.Web_DashBoardRepository.Instance;

        static EnterIndicatorSetting instance = new EnterIndicatorSetting();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterIndicatorSetting()
        {
            modPanelTitle = "";
            modPanelShowTitle = "";
            modPanelStatisticfield = "Created by";
            modPanelValue = "administrator";
            modPanelPercentage = "false";
            modPanelFroms = "";
            modPanelColors = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterIndicatorSetting Instance
        {
            get { return instance; }
        }

#region Variables

        string _modPanelTitle;

        /// <summary>
        /// Gets or sets the value of variable modPanelTitle.
        /// </summary>
        [TestVariable("7f2b6fad-3a9e-478f-8740-5b4effd8ce12")]
        public string modPanelTitle
        {
            get { return _modPanelTitle; }
            set { _modPanelTitle = value; }
        }

        string _modPanelShowTitle;

        /// <summary>
        /// Gets or sets the value of variable modPanelShowTitle.
        /// </summary>
        [TestVariable("432721c2-5b1b-4629-96eb-dabd5947e54b")]
        public string modPanelShowTitle
        {
            get { return _modPanelShowTitle; }
            set { _modPanelShowTitle = value; }
        }

        string _modPanelStatisticfield;

        /// <summary>
        /// Gets or sets the value of variable modPanelStatisticfield.
        /// </summary>
        [TestVariable("1d981127-7dbe-4f00-9604-b75dfb1b0716")]
        public string modPanelStatisticfield
        {
            get { return _modPanelStatisticfield; }
            set { _modPanelStatisticfield = value; }
        }

        string _modPanelValue;

        /// <summary>
        /// Gets or sets the value of variable modPanelValue.
        /// </summary>
        [TestVariable("0c0d2a14-ff83-4ba5-befe-260bac3cdf8b")]
        public string modPanelValue
        {
            get { return _modPanelValue; }
            set { _modPanelValue = value; }
        }

        string _modPanelPercentage;

        /// <summary>
        /// Gets or sets the value of variable modPanelPercentage.
        /// </summary>
        [TestVariable("959dd9b9-dbdf-4125-9952-676aa40bc87e")]
        public string modPanelPercentage
        {
            get { return _modPanelPercentage; }
            set { _modPanelPercentage = value; }
        }

        string _modPanelFroms;

        /// <summary>
        /// Gets or sets the value of variable modPanelFroms.
        /// </summary>
        [TestVariable("c326afc5-3bbf-46a2-bc4c-db93b6ffb179")]
        public string modPanelFroms
        {
            get { return _modPanelFroms; }
            set { _modPanelFroms = value; }
        }

        string _modPanelColors;

        /// <summary>
        /// Gets or sets the value of variable modPanelColors.
        /// </summary>
        [TestVariable("83ab5b5f-d318-45a9-8476-004099028efc")]
        public string modPanelColors
        {
            get { return _modPanelColors; }
            set { _modPanelColors = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$modPanelTitle' with focus on 'Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.txtTitle'.", repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.txtTitleInfo, new RecordItemIndex(0));
            repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.txtTitle.PressKeys(modPanelTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to '$modPanelShowTitle' on item 'Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxShowTitle'.", repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxShowTitleInfo, new RecordItemIndex(1));
            repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxShowTitle.Element.SetAttributeValue("Checked", modPanelShowTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$modPanelStatisticfield' on item 'Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbStatisticField'.", repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbStatisticFieldInfo, new RecordItemIndex(2));
            repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbStatisticField.Element.SetAttributeValue("TagValue", modPanelStatisticfield);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$modPanelValue' on item 'Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbValue'.", repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbValueInfo, new RecordItemIndex(3));
            repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbbValue.Element.SetAttributeValue("TagValue", modPanelValue);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Checked to '$modPanelPercentage' on item 'Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxPercentage'.", repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxPercentageInfo, new RecordItemIndex(4));
            repo.Dashboard.Panels.DisplaySettingTab.IndicatorSettingGroup.cbxPercentage.Element.SetAttributeValue("Checked", modPanelPercentage);
            Delay.Milliseconds(0);
            
            AddCriteria(modPanelFroms, modPanelColors);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
